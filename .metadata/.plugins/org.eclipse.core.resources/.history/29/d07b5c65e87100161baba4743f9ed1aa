package uk.co.luciditysoftware.actsintown.domain.tests.entities.spot;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertNotNull;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.junit.Test;

import uk.co.luciditysoftware.actsintown.domain.entities.Spot;
import uk.co.luciditysoftware.actsintown.domain.entities.Town;
import uk.co.luciditysoftware.actsintown.domain.entities.User;
import uk.co.luciditysoftware.actsintown.domain.parametersets.spot.AddParameterSet;

public class ValidateAddTests {
	private SimpleDateFormat dateFormat;

	@Test
	public void spotIsCreatedCorrectly() throws ParseException {
		dateFormat = new SimpleDateFormat("dd-M-yyyy hh:mm:ss");

		final User user = new User() {
			{
				setUsername("gary.green@green.com");
			}
		};

		Spot spot = new Spot() {
			{
				setUser(user);
				setScheduledFor(dateFormat.parse("16-11-2020 19:30:00"));
				setDurationMinutes(30);
				setTown(new Town());
				setVenueName("Test Venue 02");
				setAddedOn(new Date());
				setCancelled(false);
			}
		};
		
		user.getSpots().add(spot);

		AddParameterSet parameterSet = new AddParameterSet() {
			{
				this.setUser(user);
				this.setScheduledFor(dateFormat.parse("16-11-2015 00:00:00"));
				this.setDurationMinutes(10);
				this.setTown(new Town() {
					{
						this.setName("Greenville");
					}
				});
				this.setVenueName("The Comedy Club");
			}
		};

		Spot spot = Spot.add(parameterSet);

		assertEquals("gary.green@green.com", spot.getUser().getUsername());
		assertEquals(dateFormat.parse("16-11-2015 00:00:00"), spot.getScheduledFor());
		assertEquals(10, spot.getDurationMinutes());
		assertEquals("Greenville", spot.getTown().getName());
		assertEquals("The Comedy Club", spot.getVenueName());
		assertNotNull(spot.getAddedOn());
		assertFalse(spot.isCancelled());
	}
}
