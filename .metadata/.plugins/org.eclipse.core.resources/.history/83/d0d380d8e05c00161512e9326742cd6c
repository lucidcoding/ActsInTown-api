package uk.co.luciditysoftware.actsintown.api.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.BadCredentialsException;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import uk.co.luciditysoftware.actsintown.api.config.SecurityConfiguration;
import uk.co.luciditysoftware.actsintown.domain.entities.User;
import uk.co.luciditysoftware.actsintown.domain.repositorycontracts.UserRepository;

@RestController
@RequestMapping("/token")
public class TokenController {
	
	@Autowired
	private UserRepository userRepository; 
	
	@RequestMapping(value = "", method = RequestMethod.GET)
	@ResponseBody
	public String get(@RequestParam("username") String username, @RequestParam("password") String password)  {
		
		User user = userRepository.getByUsername(username);

		if (user == null) {
			return null;
		}

		byte[] passwordBytes = Base64.decodeBase64(user.getPassword());

		if(username.equals("pauldavies") && password.equals("password1")) {

			String compactJws = Jwts.builder()
			  .setSubject(username)
			  .signWith(SignatureAlgorithm.HS512, SecurityConfiguration.JWT_SIGNING_KEY)
			  .compact();
			
			return compactJws;
		}
		else {
			throw new BadCredentialsException("Bad Credentials");
		}
	}
}
