package uk.co.luciditysoftware.actsintown.api.utilities;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter;
import org.springframework.stereotype.Service;
import org.springframework.security.oauth2.common.OAuth2AccessToken;
import org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationDetails;

import uk.co.luciditysoftware.actsintown.api.config.SecurityConfiguration;
import uk.co.luciditysoftware.actsintown.domain.entities.User;
import uk.co.luciditysoftware.actsintown.domain.repositorycontracts.UserRepository;

@Service 
public class CurrentUserResolverImpl implements CurrentUserResolver {
    @Autowired
    private UserRepository userRepository;
    
    public String getUsername() {
        String username = (String) SecurityContextHolder
            .getContext()
            .getAuthentication()
            .getPrincipal();
   
        Authentication authentication = SecurityContextHolder
                .getContext()
                .getAuthentication();
                
        OAuth2AuthenticationDetails details = (OAuth2AuthenticationDetails)authentication
                .getDetails();

        String tokenString = details.getTokenValue();
        JwtAccessTokenConverter converter = new JwtAccessTokenConverter();
        converter.setSigningKey(SecurityConfiguration.JWT_SIGNING_KEY);
        OAuth2AccessToken token = converter.extractAccessToken(tokenString, null);
        //converter.convertAccessToken(token, authentication.);
        return username;
    }
    
    public User getUser() {
        String username = getUsername();
        User user = userRepository.getByUsername(username);
        return user;
    }
}
